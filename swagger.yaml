openapi: 3.0.0
info:
  title: Online Course API
  version: 1.0.0
  description: API for managing an online course platform

servers:
  - url: http://localhost:3000
    description: Local server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [student, instructor]
    Course:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        instructor:
          $ref: '#/components/schemas/User'
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
    Lesson:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        course:
          $ref: '#/components/schemas/Course'
    Enrollment:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        course:
          $ref: '#/components/schemas/Course'
        status:
          type: string
          enum: [enrolled, completed, canceled]
    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Review:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        course:
          $ref: '#/components/schemas/Course'
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string
    Quiz:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        course:
          $ref: '#/components/schemas/Course'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Question:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        quiz:
          $ref: '#/components/schemas/Quiz'
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    Answer:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        isCorrect:
          type: boolean
        question:
          $ref: '#/components/schemas/Question'
    Payment:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        amount:
          type: number
        method:
          type: string
          enum: [credit_card, paypal]
        status:
          type: string
          enum: [pending, completed, failed]
    Certificate:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        course:
          $ref: '#/components/schemas/Course'
        dateIssued:
          type: string
          format: date

paths:
  /users:
    get:
      summary: Get all users
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /users/{userId}:
    get:
      summary: Get a specific user
      tags: 
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a specific user
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
    delete:
      summary: Delete a specific user
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted

  /courses:
    get:
      summary: Get all courses
      tags:
        - Courses
      responses:
        '200':
          description: A list of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
    post:
      summary: Create a new course
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '201':
          description: Course created
  /courses/{courseId}:
    get:
      summary: Get a specific course
      tags:
        - Courses
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Course details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
    put:
      summary: Update a specific course
      tags:
        - Courses
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        '200':
          description: Course updated
    delete:
      summary: Delete a specific course
      tags:
        - Courses
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Course deleted

  /lessons:
    get:
      summary: Get all lessons
      tags:
        - Lessons
      responses:
        '200':
          description: A list of lessons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lesson'
    post:
      summary: Create a new lesson
      tags:
        - Lessons
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
      responses:
        '201':
          description: Lesson created
  /lessons/{lessonId}:
    get:
      summary: Get a specific lesson
      tags:
        - Lessons
      parameters:
        - in: path
          name: lessonId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Lesson details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
    put:
      summary: Update a specific lesson
      tags:
        - Lessons
      parameters:
        - in: path
          name: lessonId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
      responses:
        '200':
          description: Lesson updated
    delete:
      summary: Delete a specific lesson
      tags:
        - Lessons
      parameters:
        - in: path
          name: lessonId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Lesson deleted

  /enrollments:
    get:
      summary: Get all enrollments
      tags:
        - Enrollments
      responses:
        '200':
          description: A list of enrollments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
    post:
      summary: Enroll a user in a course
      tags:
        - Enrollments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
      responses:
        '201':
          description: Enrollment created
  /enrollments/{enrollmentId}:
    get:
      summary: Get a specific enrollment
      tags:
        - Enrollments
      parameters:
        - in: path
          name: enrollmentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Enrollment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
    put:
      summary: Update a specific enrollment
      tags:
        - Enrollments
      parameters:
        - in: path
          name: enrollmentId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
      responses:
        '200':
          description: Enrollment updated
    delete:
      summary: Delete a specific enrollment
      tags:
        - Enrollments
      parameters:
        - in: path
          name: enrollmentId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Enrollment deleted

  /categories:
    get:
      summary: Get all categories
      tags:
        - Categories
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Create a new category
      tags:
        - Categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          description: Category created
  /categories/{categoryId}:
    get:
      summary: Get a specific category
      tags:
        - Categories
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Category details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    put:
      summary: Update a specific category
      tags:
        - Categories
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Category updated
    delete:
      summary: Delete a specific category
      tags:
        - Categories
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Category deleted

  /reviews:
    get:
      summary: Get all reviews
      tags:
        - Reviews
      responses:
        '200':
          description: A list of reviews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
    post:
      summary: Create a new review
      tags:
        - Reviews
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: Review created
  /reviews/{reviewId}:
    get:
      summary: Get a specific review
      tags:
        - Reviews
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Review details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
    put:
      summary: Update a specific review
      tags:
        - Reviews
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '200':
          description: Review updated
    delete:
      summary: Delete a specific review
      tags:
        - Reviews
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Review deleted

  /quizzes:
    get:
      summary: Get all quizzes
      tags:
        - Quizzes
      responses:
        '200':
          description: A list of quizzes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Quiz'
    post:
      summary: Create a new quiz
      tags:
        - Quizzes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz'
      responses:
        '201':
          description: Quiz created
  /quizzes/{quizId}:
    get:
      summary: Get a specific quiz
      tags:
        - Quizzes
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Quiz details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Quiz'
    put:
      summary: Update a specific quiz
      tags:
        - Quizzes
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quiz'
      responses:
        '200':
          description: Quiz updated
    delete:
      summary: Delete a specific quiz
      tags:
        - Quizzes
      parameters:
        - in: path
          name: quizId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Quiz deleted

  /questions:
    get:
      summary: Get all questions
      tags:
        - Questions
      responses:
        '200':
          description: A list of questions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
    post:
      summary: Create a new question
      tags:
        - Questions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '201':
          description: Question created
  /questions/{questionId}:
    get:
      summary: Get a specific question
      tags:
        - Questions
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Question details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
    put:
      summary: Update a specific question
      tags:
        - Questions
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Question'
      responses:
        '200':
          description: Question updated
    delete:
      summary: Delete a specific question
      tags:
        - Questions
      parameters:
        - in: path
          name: questionId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Question deleted

  /answers:
    get:
      summary: Get all answers
      tags:
        - Answers
      responses:
        '200':
          description: A list of answers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
    post:
      summary: Create a new answer
      tags:
        - Answers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
      responses:
        '201':
          description: Answer created
  /answers/{answerId}:
    get:
      summary: Get a specific answer
      tags:
        - Answers
      parameters:
        - in: path
          name: answerId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Answer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
    put:
      summary: Update a specific answer
      tags:
        - Answers
      parameters:
        - in: path
          name: answerId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Answer'
      responses:
        '200':
          description: Answer updated
    delete:
      summary: Delete a specific answer
      tags:
        - Answers
      parameters:
        - in: path
          name: answerId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Answer deleted

  /payments:
    get:
      summary: Get all payments
      tags:
        - Payments
      responses:
        '200':
          description: A list of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
    post:
      summary: Create a new payment
      tags:
        - Payments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '201':
          description: Payment created
  /payments/{paymentId}:
    get:
      summary: Get a specific payment
      tags:
        - Payments
      parameters:
        - in: path
          name: paymentId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payment details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
    put:
      summary: Update a specific payment
      tags:
        - Payments
      parameters:
        - in: path
          name: paymentId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
      responses:
        '200':
          description: Payment updated
    delete:
      summary: Delete a specific payment
      tags:
        - Payments
      parameters:
        - in: path
          name: paymentId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Payment deleted

  /certificates:
    get:
      summary: Get all certificates
      tags:
        - Certificates
      responses:
        '200':
          description: A list of certificates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Certificate'
    post:
      summary: Create a new certificate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      responses:
        '201':
          description: Certificate created
  /certificates/{certificateId}:
    get:
      summary: Get a specific certificate
      tags:
        - Certificates
      parameters:
        - in: path
          name: certificateId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Certificate details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
    put:
      summary: Update a specific certificate
      tags:
        - Certificates
      parameters:
        - in: path
          name: certificateId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Certificate'
      responses:
        '200':
          description: Certificate updated
    delete:
      summary: Delete a specific certificate
      tags:
        - Certificates
      parameters:
        - in: path
          name: certificateId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Certificate deleted

tags:
  - name: Users
    description: Endpoints related to users
  - name: Courses
    description: Endpoints related to courses
  - name: Lessons
    description: Endpoints related to lessons
  - name: Enrollments
    description: Endpoints related to enrollments
  - name: Categories
    description: Endpoints related to categories
  - name: Reviews
    description: Endpoints related to reviews
  - name: Quizzes
    description: Endpoints related to quizzes
  - name: Questions
    description: Endpoints related to questions
  - name: Answers
    description: Endpoints related to answers
  - name: Payments
    description: Endpoints related to payments
  - name: Certificates
    description: Endpoints related to certificates
